name: Build

on:
  workflow_dispatch:
    inputs: {}
  push:
    branches: [ "main" ]
    tags: [ "v**" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build-scala:
    runs-on: ubuntu-latest
    steps:
      - uses: 7mind/github-env@main
        with:
          java-version: 17
      - uses: bitwarden/sm-action@v1.0.0
        with:
          access_token: ${{ secrets.TOKEN_BITWARDEN_SM }}
          secrets: |
            994f97a2-97a4-4fe1-806a-b1930104435f > SONATYPE_CREDENTIALS_FILE
            749f4227-9f11-4ceb-9121-b1930110c3a9 > OPENSSL_KEY
            a2fe5b5b-5f3f-47f8-961c-b1930110cea7 > OPENSSL_IV
      - name: Build and Test
        run: |
          COMMAND="sbt +clean +test"

          cd json-sick-scala

          if [[ "$GITHUB_REF" == refs/heads/main || "$CI_BRANCH_TAG" =~ ^v.*$ ]] ; then
            SONATYPE_SECRET=.secrets/credentials.sonatype-nexus.properties
            echo "$SONATYPE_CREDENTIALS_FILE" > "$SONATYPE_SECRET"
            openssl aes-256-cbc -K ${OPENSSL_KEY} -iv ${OPENSSL_IV} -in ../secrets.tar.enc -out secrets.tar -d
            tar xvf secrets.tar
            COMMAND="$COMMAND +publishSigned"
            if [[ "$CI_BRANCH_TAG" =~ ^v.*$ ]] ; then
              COMMAND="$COMMAND sonatypeBundleRelease"
            fi
          fi

          echo $COMMAND
          eval $COMMAND
  build-cs:
    runs-on: ubuntu-latest
    steps:
      - uses: 7mind/github-env@main
        with:
          java-enable: false
          nuget-enable: true
      - uses: bitwarden/sm-action@v1.0.0
        with:
          access_token: ${{ secrets.TOKEN_BITWARDEN_SM }}
          secrets: |
            637c5cad-a680-4ea3-ac8b-b193010bee40 > TOKEN_NUGET
      - name: Build and Test
        run: |
          cd json-sick-csharp

          # dotnet clean -c Release
          if [[ "$CI_BRANCH_TAG" =~ ^v.*$ ]] ; then
            dotnet build -c Release
          else
            dotnet build -c Release --version-suffix "alpha.${CI_BUILD_UNIQ_SUFFIX}"
          fi

          for TRG in $(find . -name '*.nupkg' -type f -print)
          do
            dotnet nuget push $TRG -k ${TOKEN_NUGET} --source https://api.nuget.org/v3/index.json || exit 1
          done
